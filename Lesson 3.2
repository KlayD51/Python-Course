Do Now: Look up how to do python conditionals?


Objectives:
-Refresh on how methods work
-Method breakdown/practice
-Watch method YouTube video
-User Input

Useful Sources:
https://www.w3schools.com/python/ref_func_print.asp
#This is for w3 schools, it has everything were learning(in the left column).  If you get confused you can refer back to this and it has examples as well.


https://www.youtube.com/watch?v=fbaSAS9DWZw
#This video has basic method usage in it with some examples for you.

*There is after school coding tutoring in Mr.Barretts class Tuesdays and Thursdays*

Basic Method breakdown:
For this example we will use the print method.

print()

The name of the method is PRINT

The parentheses () is where you pass in your information.

Inside your parentheses is where you display your information(in the case of a string, if its not a string you DO NOT NEED quotes).

If you ever need to know what a method looks like LOOK UP THE METHOD

What methods do changes based on which one it is, THEY ARE NOT UNIVERSAL so just google it.(examples are useful)

So for an integer == print(5)       
*the integer(data type) is 5					*No quotes because its not a string

For a string == print(“This is a string passed inside a method”)		
*the string is in the quote, a string(data type) is writing inside of quotes(the way you would speak)

For a boolean == print(True)		
*True or False is a boolean(data type) 		*Notice it doesn’t have quotes because it is not a string

Click the link to look up the capitalize method and use it:
https://www.w3schools.com/python/ref_string_capitalize.asp


Python Key words:

If
Else
Elif
True
False

Some more python key words:
https://www.w3schools.com/python/python_ref_keywords.asp

Python key words are built in to do things for you, like “if” or “else”. So when you see them that doesnt mean to type how you would speak
these key words are different and function within the code.

User Input:

-This is how you ask your user for information
-You do this because you will not always be running your code, someone else will likely have to use it
-When you are coding something yourself its a good way to test without typing 
-Great way to collect info for your program without the user having the power to mess it up
-Limits access to the data, which they probably don’t understand

Demo:

ExampleVariable = input(“What you want to ask of the user would go here”)

The input from the user is stored in the variable ExampleVariable

You can now do whatever you want with the input from the user, last class I used input in the program that compared numbers.
firstNumber and secondNumber held the numbers from the user.

